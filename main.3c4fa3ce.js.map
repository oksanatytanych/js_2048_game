{"version":3,"sources":["scripts/main.js"],"names":["board","score","rows","columns","getNumber2048","gameField","document","querySelector","scoreField","button","startMessage","winMessage","loseMessage","setGame","r","c","tile","createElement","num","id","toString","updataTile","append","hasEmptyTile","setTwoOrFour","found","Math","floor","random","addNumber","el","getElementById","innerText","classList","add","value","get2048","remove","filterZero","row","filter","slide","slideRow","i","length","push","slideLeft","slideRight","reverse","slideUp","slideDown","lastStep","window","onload","addEventListener","e","contains","replace","code"],"mappings":"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","file":"main.3c4fa3ce.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet board = [];\nlet score = 0;\nconst rows = 4;\nconst columns = 4;\nlet getNumber2048 = false;\n\nconst gameField = document.querySelector('.game-field');\nconst scoreField = document.querySelector('.game-score');\nconst button = document.querySelector('.button');\n\nconst startMessage = document.querySelector('.message-start');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\n\nwindow.onload = function() {\n  setGame();\n};\n\nfunction setGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const tile = document.createElement('div');\n      const num = board[r][c];\n\n      tile.id = r.toString() + '-' + c.toString();\n      updataTile(tile, num);\n      gameField.append(tile);\n    }\n  }\n}\n\nfunction hasEmptyTile() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction setTwoOrFour() {\n  if (!hasEmptyTile()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    const addNumber = [2, 2, 2, 2, 2, 2, 2, 2, 2, 4];\n    const el = Math.floor(Math.random() * 10);\n\n    if (board[r][c] === 0) {\n      board[r][c] = addNumber[el];\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n\n      tile.innerText = addNumber[el];\n      tile.classList.add('field-cell--' + addNumber[el].toString());\n      found = true;\n    }\n  }\n}\n\nfunction updataTile(tile, num) {\n  tile.innerText = '';\n  tile.classList.value = '';\n  tile.classList.add('field-cell');\n\n  if (num > 0) {\n    tile.innerText = num;\n\n    if (num <= 2048) {\n      tile.classList.add('field-cell--' + num.toString());\n    }\n  }\n}\n\nfunction get2048() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(`${r}-${c}`);\n\n      if (tile.innerText === '2048') {\n        getNumber2048 = true;\n        winMessage.classList.remove('hidden');\n      }\n    }\n  }\n}\n\nfunction filterZero(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction slide(row) {\n  let slideRow = row;\n\n  slideRow = filterZero(slideRow);\n\n  for (let i = 0; i < slideRow.length; i++) {\n    if (slideRow[i] === slideRow[i + 1]) {\n      slideRow[i] *= 2;\n      slideRow[i + 1] = 0;\n      score += slideRow[i];\n    }\n  }\n\n  slideRow = filterZero(slideRow);\n\n  while (slideRow.length < columns) {\n    slideRow.push(0);\n  }\n\n  return slideRow;\n}\n\nfunction slideLeft() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row = slide(row);\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updataTile(tile, num);\n    }\n  }\n}\n\nfunction slideRight() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updataTile(tile, num);\n    }\n  }\n}\n\nfunction slideUp() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row = slide(row);\n\n    for (let r = 0; r < columns; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updataTile(tile, num);\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n\n    for (let r = 0; r < columns; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updataTile(tile, num);\n    }\n  }\n}\n\nfunction lastStep() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 1; c < columns; c++) {\n      if (board[r][c - 1] === board[r][c]) {\n        return true;\n      }\n    }\n  }\n\n  for (let c = 0; c < columns; c++) {\n    for (let r = 1; r < rows; r++) {\n      if (board[r - 1][c] === board[r][c]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nbutton.addEventListener('click', (e) => {\n  if (button.classList.contains('start')) {\n    button.classList.replace('start', 'restart');\n    button.innerText = 'Restart';\n    startMessage.classList.add('hidden');\n\n    setTwoOrFour();\n    setTwoOrFour();\n  } else {\n    button.classList.replace('restart', 'start');\n    button.innerText = 'Start';\n    startMessage.classList.remove('hidden');\n    loseMessage.classList.add('hidden');\n\n    board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < columns; c++) {\n        const tile = document.getElementById(`${r}-${c}`);\n\n        tile.innerText = '';\n        tile.classList.value = '';\n        tile.classList.add('field-cell');\n\n        winMessage.classList.add('hidden');\n      }\n    }\n\n    score = 0;\n    scoreField.innerText = score;\n  }\n});\n\ndocument.addEventListener('keyup', (e) => {\n  if (getNumber2048) {\n    return;\n  }\n\n  if (e.code === 'ArrowLeft') {\n    slideLeft();\n    setTwoOrFour();\n  } else if (e.code === 'ArrowRight') {\n    slideRight();\n    setTwoOrFour();\n  } else if (e.code === 'ArrowUp') {\n    slideUp();\n    setTwoOrFour();\n  } else if (e.code === 'ArrowDown') {\n    slideDown();\n    setTwoOrFour();\n  }\n\n  scoreField.innerText = score;\n\n  get2048();\n\n  if (!lastStep()) {\n    loseMessage.classList.remove('hidden');\n  }\n});\n"]}